"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5686"],{52937:function(e,t,s){s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>h});var l=s(29806),i=s(74848),n=s(84429);let a={authors:"tgodzik",title:"Metals v0.7.6 - Thorium"},r,o={authorsImageUrls:[void 0]},h=[{value:"TL;DR",id:"tldr",level:2},{value:"Add support for Scala 2.12.10 and 2.13.1",id:"add-support-for-scala-21210-and-2131",level:2},{value:"Formatting on paste for multiline strings",id:"formatting-on-paste-for-multiline-strings",level:2},{value:"Fixes for autofill feature",id:"fixes-for-autofill-feature",level:2},{value:"Contributors",id:"contributors",level:2},{value:"Merged PRs",id:"merged-prs",level:2},{value:"v0.7.6 (2019-09-23)",id:"v076-2019-09-23",level:2}];function c(e){let t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"We are excited to announce the release of Metals v0.7.6, which will most likely\nbe the last release before the v0.8.0 one. This release includes support for new\nScala versions (2.12.10, 2.13.1) and a couple of fixes. It also adds a new\nformatting on paste feature for multiline strings."}),"\n",(0,i.jsxs)(t.p,{children:["Metals is a language server for Scala that works with VS Code, Atom, Vim,\nSublime Text and Emacs. Metals is developed at the\n",(0,i.jsx)(t.a,{href:"https://scala.epfl.ch/",children:"Scala Center"})," and ",(0,i.jsx)(t.a,{href:"https://virtuslab.com",children:"VirtusLab"}),"\nalong with contributors from the community."]}),"\n",(0,i.jsxs)(t.p,{children:["In this release we merged 11 PRs and closed 5 issues, full details:\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/milestone/18?closed=1",children:"https://github.com/scalameta/metals/milestone/18?closed=1"})]}),"\n",(0,i.jsx)(t.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,i.jsxs)(t.p,{children:["Check out the website and give Metals a try: ",(0,i.jsx)(t.a,{href:"https://scalameta.org/metals/",children:"https://scalameta.org/metals/"})]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"add support for Scala 2.12.10 and 2.13.1"}),"\n",(0,i.jsx)(t.li,{children:"formatting on paste for multiline strings"}),"\n",(0,i.jsx)(t.li,{children:"fixes for autofill feature"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"add-support-for-scala-21210-and-2131",children:"Add support for Scala 2.12.10 and 2.13.1"}),"\n",(0,i.jsx)(t.p,{children:"Thanks to @gabro's continuing effort we were able to add support for both new\nScala versions. Those versions fix a couple of important regressions and are now\navailable to use with Metals!"}),"\n",(0,i.jsx)(t.h2,{id:"formatting-on-paste-for-multiline-strings",children:"Formatting on paste for multiline strings"}),"\n",(0,i.jsxs)(t.p,{children:["Whenever text is pasted into a multiline string with ",(0,i.jsx)(t.code,{children:"|"})," it will be properly\nformatted by Metals:"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://i.imgur.com/yJLAIxQ.gif",alt:"format-on-paste"})}),"\n",(0,i.jsx)(t.p,{children:"To enable this feature you need to enable formatting on paste in your editor of\nchoice. In Visual Studio Code it can be done via modifying a checkbox:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://i.imgur.com/OaBxwer.png",alt:"format-on-paste"})}),"\n",(0,i.jsx)(t.h2,{id:"fixes-for-autofill-feature",children:"Fixes for autofill feature"}),"\n",(0,i.jsx)(t.p,{children:"After releasing the experimental autofill feature we addressed feedback by:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"not filling in the default arguments"}),"\n",(0,i.jsxs)(t.li,{children:["adding ",(0,i.jsx)(t.code,{children:"???"})," as a first option when alternative values are available to avoid\nmistakes"]}),"\n",(0,i.jsx)(t.li,{children:"add subtypes as valid values"}),"\n",(0,i.jsxs)(t.li,{children:["only show autofill option when using named parameters or by explicitly typing\n",(0,i.jsx)(t.code,{children:"autofill..."})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Let us know if you have any further feedback!"}),"\n",(0,i.jsx)(t.h2,{id:"contributors",children:"Contributors"}),"\n",(0,i.jsx)(t.p,{children:"Big thanks to everybody who contributed to this release!"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"$ git shortlog -sn --no-merges v0.7.5..v0.7.6\nTomasz Godzik\nMarek \u017Barnowski\nGabriele Petronella\n\xd3lafur P\xe1ll Geirsson\nSam Halliday\n"})}),"\n",(0,i.jsx)(t.h2,{id:"merged-prs",children:"Merged PRs"}),"\n",(0,i.jsxs)(t.h2,{id:"v076-2019-09-23",children:[(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/tree/v0.7.6",children:"v0.7.6"})," (2019-09-23)"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/compare/v0.7.5...v0.7.6",children:"Full Changelog"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Merged pull requests:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["replace java streams with generators\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/938",children:"#938"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/marek1840",children:"marek1840"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["ENSIME is not an alternative\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/936",children:"#936"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/fommil",children:"fommil"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Swap field to type parameter for scala Type\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/933",children:"#933"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Refactor autofill option ",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/932",children:"#932"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Make sure we continue searching for symbols in try.\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/930",children:"#930"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Disable flaky test. ",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/918",children:"#918"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/olafurpg",children:"olafurpg"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Fix indentation when adding pipes in multiline string.\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/922",children:"#922"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Remove dealias to properly support type\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/921",children:"#921"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Simplify testing when calculating position and automatically add pipes when\ncopy pasting input ",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/919",children:"#919"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/tgodzik",children:"tgodzik"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Add Scala 2.12.10 support and use 2.12.10 on Metals\n",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/913",children:"#913"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/gabro",children:"gabro"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["Update ",(0,i.jsx)(t.code,{children:"isCompiled"})," status of the build target regardless of the compilation\nresult ",(0,i.jsx)(t.a,{href:"https://github.com/scalameta/metals/pull/907",children:"#907"}),"\n(",(0,i.jsx)(t.a,{href:"https://github.com/marek1840",children:"marek1840"}),")"]}),"\n"]})]})}function d(e={}){let{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},84429:function(e,t,s){s.d(t,{R:()=>a,x:()=>r});var l=s(96540);let i={},n=l.createContext(i);function a(e){let t=l.useContext(n);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),l.createElement(n.Provider,{value:t},e.children)}},29806:function(e){e.exports=JSON.parse('{"permalink":"/metals/blog/2019/09/23/thorium","source":"@site/blog/2019-09-23-thorium.md","title":"Metals v0.7.6 - Thorium","description":"We are excited to announce the release of Metals v0.7.6, which will most likely","date":"2019-09-23T00:00:00.000Z","tags":[],"readingTime":2.77,"hasTruncateMarker":false,"authors":[{"name":"Tomasz Godzik","url":"https://twitter.com/TomekGodzik","imageURL":"https://github.com/tgodzik.png","key":"tgodzik","page":null}],"frontMatter":{"authors":"tgodzik","title":"Metals v0.7.6 - Thorium"},"unlisted":false,"prevItem":{"title":"Metals v0.8.0 - Cobalt","permalink":"/metals/blog/2020/01/10/cobalt"},"nextItem":{"title":"Metals v0.7.5 - Thorium","permalink":"/metals/blog/2019/09/12/thorium"}}')}}]);