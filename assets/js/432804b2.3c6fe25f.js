"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4321"],{4479:function(e,n,s){s.r(n),s.d(n,{metadata:()=>l,contentTitle:()=>r,default:()=>h,assets:()=>o,toc:()=>d,frontMatter:()=>a});var l=JSON.parse('{"id":"editors/user-configuration","title":"Metals User Configuration","description":"While each editor may have a different way to change the user configuration, the","source":"@site/target/docs/editors/user-configuration.md","sourceDirName":"editors","slug":"/editors/user-configuration","permalink":"/metals/docs/editors/user-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/scalameta/metals/edit/main/docs/editors/user-configuration.md","tags":[],"version":"current","frontMatter":{"id":"user-configuration","title":"Metals User Configuration","sidebar_label":"User Configuration"},"sidebar":"docs","previous":{"title":"Online IDEs","permalink":"/metals/docs/editors/online-ides"},"next":{"title":"Code Actions","permalink":"/metals/docs/features/codeactions"}}'),i=s("5893"),t=s("65");let a={id:"user-configuration",title:"Metals User Configuration",sidebar_label:"User Configuration"},r=void 0,o={},d=[{value:"Java Home directory",id:"java-home-directory",level:3},{value:"sbt script",id:"sbt-script",level:3},{value:"Gradle script",id:"gradle-script",level:3},{value:"Maven script",id:"maven-script",level:3},{value:"Mill script",id:"mill-script",level:3},{value:"Scalafmt config path",id:"scalafmt-config-path",level:3},{value:"Scalafix config path",id:"scalafix-config-path",level:3},{value:"Ammonite JVM Properties",id:"ammonite-jvm-properties",level:3},{value:"Excluded Packages",id:"excluded-packages",level:3},{value:"Don&#39;t generate Bloop plugin file for sbt",id:"dont-generate-bloop-plugin-file-for-sbt",level:3},{value:"Version of Bloop",id:"version-of-bloop",level:3},{value:"Bloop JVM Properties",id:"bloop-jvm-properties",level:3},{value:"Should display lenses with links to super methods",id:"should-display-lenses-with-links-to-super-methods",level:3},{value:"Should display type annotations for inferred types",id:"should-display-type-annotations-for-inferred-types",level:3},{value:"Should display implicit parameter at usage sites",id:"should-display-implicit-parameter-at-usage-sites",level:3},{value:"Should display implicit conversion at usage sites",id:"should-display-implicit-conversion-at-usage-sites",level:3},{value:"Should display type annotations for type parameters",id:"should-display-type-annotations-for-type-parameters",level:3},{value:"Should display type annotations in pattern matches",id:"should-display-type-annotations-in-pattern-matches",level:3},{value:"Use semantic tokens highlight",id:"use-semantic-tokens-highlight",level:3},{value:"Indent snippets when pasted.",id:"indent-snippets-when-pasted",level:3},{value:"Default fallback Scala version",id:"default-fallback-scala-version",level:3},{value:"Test UI used for tests and test suites",id:"test-ui-used-for-tests-and-test-suites",level:3},{value:"Eclipse Java formatter config path",id:"eclipse-java-formatter-config-path",level:3},{value:"Eclipse Java formatting profile",id:"eclipse-java-formatting-profile",level:3},{value:"Scala CLI launcher",id:"scala-cli-launcher",level:3},{value:"Custom project root",id:"custom-project-root",level:3},{value:"Show all compilation debugging information",id:"show-all-compilation-debugging-information",level:3},{value:"Import build when changes detected without prompting",id:"import-build-when-changes-detected-without-prompting",level:3},{value:"Default to using build tool as your build server.",id:"default-to-using-build-tool-as-your-build-server",level:3}];function c(e){let n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"While each editor may have a different way to change the user configuration, the\nvalues should be more or less the same for all extensions. Below you'll find all\nthe available configuration options and what they do."}),"\n",(0,i.jsx)(n.h3,{id:"java-home-directory",children:"Java Home directory"}),"\n",(0,i.jsxs)(n.p,{children:["The Java Home directory used for indexing JDK sources and locating the ",(0,i.jsx)(n.code,{children:"java"})," binary."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"JAVA_HOME"})," environment variable with fallback to ",(0,i.jsx)(n.code,{children:"user.home"})," system property."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "javaHome": "/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sbt-script",children:"sbt script"}),"\n",(0,i.jsxs)(n.p,{children:["Optional absolute path to an ",(0,i.jsx)(n.code,{children:"sbt"})," executable to use for running ",(0,i.jsx)(n.code,{children:"sbt bloopInstall"}),".\nBy default, Metals uses ",(0,i.jsx)(n.code,{children:"java -jar sbt-launch.jar"})," with an embedded launcher while respecting\n",(0,i.jsx)(n.code,{children:".jvmopts"})," and ",(0,i.jsx)(n.code,{children:".sbtopts"}),". Update this setting if your ",(0,i.jsx)(n.code,{children:"sbt"})," script requires more customizations\nlike using environment variables."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "sbtScript": "/usr/local/bin/sbt"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"gradle-script",children:"Gradle script"}),"\n",(0,i.jsxs)(n.p,{children:["Optional absolute path to a ",(0,i.jsx)(n.code,{children:"gradle"})," executable to use for running ",(0,i.jsx)(n.code,{children:"gradle bloopInstall"}),".\nBy default, Metals uses gradlew with 7.5.0 gradle version. Update this setting if your ",(0,i.jsx)(n.code,{children:"gradle"})," script requires more customizations\nlike using environment variables."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "gradleScript": "/usr/local/bin/gradle"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"maven-script",children:"Maven script"}),"\n",(0,i.jsxs)(n.p,{children:["Optional absolute path to a ",(0,i.jsx)(n.code,{children:"maven"})," executable to use for generating bloop config.\nBy default, Metals uses mvnw maven wrapper with 3.6.1 maven version. Update this setting if your ",(0,i.jsx)(n.code,{children:"maven"})," script requires more customizations"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "mavenScript": "/usr/local/bin/mvn"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mill-script",children:"Mill script"}),"\n",(0,i.jsxs)(n.p,{children:["Optional absolute path to a ",(0,i.jsx)(n.code,{children:"mill"})," executable to use for running ",(0,i.jsx)(n.code,{children:"mill mill.contrib.bloop.Bloop/install"}),".\nBy default, Metals uses mill wrapper script with 0.5.0 mill version. Update this setting if your ",(0,i.jsx)(n.code,{children:"mill"})," script requires more customizations\nlike using environment variables."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "millScript": "/usr/local/bin/mill"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"scalafmt-config-path",children:"Scalafmt config path"}),"\n",(0,i.jsxs)(n.p,{children:["Optional custom path to the .scalafmt.conf file.\nIt should be a path (relative or absolute - though an absolute path is recommended) and use\nforward slashes ",(0,i.jsx)(n.code,{children:"/"})," for file separators (even on Windows)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "scalafmtConfigPath": "project/.scalafmt.conf"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"scalafix-config-path",children:"Scalafix config path"}),"\n",(0,i.jsxs)(n.p,{children:["Optional custom path to the .scalafix.conf file.\nIt should be a path (relative or absolute - though an absolute path is recommended) and use\nforward slashes ",(0,i.jsx)(n.code,{children:"/"})," for file separators (even on Windows)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "scalafixConfigPath": "project/.scalafix.conf"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"ammonite-jvm-properties",children:"Ammonite JVM Properties"}),"\n",(0,i.jsxs)(n.p,{children:["Optional list of JVM properties to pass along to the Ammonite server.\nEach property needs to be a separate item.\\n\\nExample: ",(0,i.jsx)(n.code,{children:"-Xmx1G"})," or ",(0,i.jsx)(n.code,{children:"-Xms100M"}),'"']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"[]"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "ammoniteJvmProperties": ["-Xmx1G"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"excluded-packages",children:"Excluded Packages"}),"\n",(0,i.jsx)(n.p,{children:"Packages that will be excluded from completions, imports, and symbol searches."}),"\n",(0,i.jsx)(n.p,{children:"Note that this is in addition to some default packages that are already excluded.\nThe default excluded packages are listed below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"META-INF\nimages\ntoolbarButtonGraphics\njdk\nsun\noracle\njava.awt.desktop\norg.jcp\norg.omg\norg.graalvm\ncom.oracle\ncom.sun\ncom.apple\napple\ncom.sourcegraph.shaded\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If there is a need to remove one of the defaults, you are able to do so by including the\npackage in your list and prepending ",(0,i.jsx)(n.code,{children:"--"})," to it."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'["--sun"]\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"[]"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "excludedPackages": ["akka.actor.typed.javadsl"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"dont-generate-bloop-plugin-file-for-sbt",children:"Don't generate Bloop plugin file for sbt"}),"\n",(0,i.jsxs)(n.p,{children:["If true, Metals will not generate ",(0,i.jsx)(n.code,{children:"metals.sbt"})," files under the assumption that sbt-bloop is already manually installed in the sbt build. Build import will fail with a 'not valid command bloopInstall' error in case Bloop is not manually installed in the build when using this option."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "bloopSbtAlreadyInstalled": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"version-of-bloop",children:"Version of Bloop"}),"\n",(0,i.jsx)(n.p,{children:"This version will be used for the Bloop build tool plugin, for any supported build tool,\nwhile importing in Metals as well as for running the embedded server"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": 2.0.6"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "bloopVersion": "1.4.0-RC1"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"bloop-jvm-properties",children:"Bloop JVM Properties"}),"\n",(0,i.jsxs)(n.p,{children:["Optional list of JVM properties to pass along to the Bloop server.\nPlease follow this guide for the format ",(0,i.jsx)(n.a,{href:"https://scalacenter.github.io/bloop/docs/server-reference#global-settings-for-the-server",children:"https://scalacenter.github.io/bloop/docs/server-reference#global-settings-for-the-server"}),'"']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),': ["-Xmx1G"].']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "bloopJvmProperties": ["-Xmx1G"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-lenses-with-links-to-super-methods",children:"Should display lenses with links to super methods"}),"\n",(0,i.jsx)(n.p,{children:"Super method lenses are visible above methods definition that override another methods. Clicking on a lens jumps to super method definition.\nDisabled lenses are not calculated for opened documents which might speed up document processing."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "superMethodLensesEnabled": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-type-annotations-for-inferred-types",children:"Should display type annotations for inferred types"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, each method that can have inferred types has them\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "inlayHints.inferredTypes.enable": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-implicit-parameter-at-usage-sites",children:"Should display implicit parameter at usage sites"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, each method that has implicit arguments has them\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "inlayHints.implicitArguments.enable": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-implicit-conversion-at-usage-sites",children:"Should display implicit conversion at usage sites"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, each place where an implicit method or class is used has it\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "inlayHints.implicitConversions.enable": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-type-annotations-for-type-parameters",children:"Should display type annotations for type parameters"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, each place when a type parameter is applied has it\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "inlayHints.typeParameters.enable": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"should-display-type-annotations-in-pattern-matches",children:"Should display type annotations in pattern matches"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, each place when a type is inferred in a pattern match has it\ndisplayed either as additional decorations if they are supported by the editor or\nshown in the hover."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "inlayHints.hintsInPatternMatch.enable": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"use-semantic-tokens-highlight",children:"Use semantic tokens highlight"}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, Metals will provide semantic tokens for clients that support it.\nThe feature should work within all supported files extensions aside from Java."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": true"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "enableSemanticHighlighting": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"indent-snippets-when-pasted",children:"Indent snippets when pasted."}),"\n",(0,i.jsx)(n.p,{children:"When this option is enabled, when a snippet is pasted into a Scala file, Metals will\ntry to adjust the indentation to that of the current cursor."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "enableIndentOnPaste": false\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"default-fallback-scala-version",children:"Default fallback Scala version"}),"\n",(0,i.jsx)(n.p,{children:"The Scala compiler version that is used as the default or fallback in case a file\ndoesn't belong to any build target or the specified Scala version isn't supported by Metals.\nThis applies to standalone Scala files, worksheets, and Ammonite scripts."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": 3.3.4"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "fallbackScalaVersion": 3.3.4\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"test-ui-used-for-tests-and-test-suites",children:"Test UI used for tests and test suites"}),"\n",(0,i.jsxs)(n.p,{children:['Default way of handling tests and test suites.  The only valid values are\n"code lenses" and "test explorer".  See ',(0,i.jsx)(n.a,{href:"https://scalameta.org/metals/docs/integrations/test-explorer",children:"https://scalameta.org/metals/docs/integrations/test-explorer"}),"\nfor information on how to work with the test explorer."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": Code Lenses"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "testUserInterface": test explorer\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"eclipse-java-formatter-config-path",children:"Eclipse Java formatter config path"}),"\n",(0,i.jsxs)(n.p,{children:["Optional custom path to the eclipse-formatter.xml file.\nIt should be a path (relative or absolute - though an absolute path is recommended) and use\nforward slashes ",(0,i.jsx)(n.code,{children:"/"})," for file separators (even on Windows)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "javaFormat.eclipseConfigPath": "formatters/eclipse-formatter.xml"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"eclipse-java-formatting-profile",children:"Eclipse Java formatting profile"}),"\n",(0,i.jsx)(n.p,{children:"If the Eclipse formatter file contains more than one profile, this option can be used to control which is used."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "javaFormat.eclipseProfile": "GoogleStyle"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"scala-cli-launcher",children:"Scala CLI launcher"}),"\n",(0,i.jsxs)(n.p,{children:["Optional absolute path to a ",(0,i.jsx)(n.code,{children:"scala-cli"})," executable to use for running a Scala CLI BSP server.\nBy default, Metals uses the scala-cli from the PATH, or it's not found, downloads and runs Scala\nCLI on the JVM (slower than native Scala CLI). Update this if you want to use a custom Scala CLI\nlauncher, not available in PATH."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "scalaCliLauncher": "/usr/local/bin/scala-cli"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-project-root",children:"Custom project root"}),"\n",(0,i.jsx)(n.p,{children:'Optional relative path to your project\'s root.\nIf you want your project root to be the workspace/workspace root set it to "." .'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": empty string ",(0,i.jsx)(n.code,{children:'""'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "customProjectRoot": "backend/scalaProject/"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"show-all-compilation-debugging-information",children:"Show all compilation debugging information"}),"\n",(0,i.jsx)(n.p,{children:"If a build server supports it (for example Bloop or Scala CLI), setting it to true\nwill make the logs contain all the possible debugging information including\nabout incremental compilation in Zinc."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "verboseCompilation": true\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"import-build-when-changes-detected-without-prompting",children:"Import build when changes detected without prompting"}),"\n",(0,i.jsx)(n.p,{children:'Automatically import builds rather than prompting the user to choose. "initial" will\nonly automatically import a build when a project is first opened, "all" will automate\nbuild imports after subsequent changes as well.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": off"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "autoImportBuild": all\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"default-to-using-build-tool-as-your-build-server",children:"Default to using build tool as your build server."}),"\n",(0,i.jsx)(n.p,{children:"If your build tool can also serve as a build server,\ndefault to using it instead of Bloop."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": false"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "metals": {\n    "defaultBspToBuildTool": true\n  }\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65:function(e,n,s){s.d(n,{Z:function(){return r},a:function(){return a}});var l=s(7294);let i={},t=l.createContext(i);function a(e){let n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);