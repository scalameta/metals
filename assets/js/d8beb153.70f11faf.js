"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["3282"],{21739:function(e,o,t){t.r(o),t.d(o,{assets:function(){return a},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return r},toc:function(){return c}});var r=t(86465),s=t(85893),n=t(50065);let i={authors:"kmarek",title:"Workspace folders"},l=void 0,a={authorsImageUrls:[void 0]},c=[{value:"The new multi-root approach",id:"the-new-multi-root-approach",level:2},{value:"How do I use the multi-root feature?",id:"how-do-i-use-the-multi-root-feature",level:2},{value:"VSCode",id:"vscode",level:3},{value:"nvim-metals (<em>section written by ckipp01</em>)",id:"nvim-metals-section-written-by-ckipp01",level:3},{value:"Changes for the clients",id:"changes-for-the-clients",level:2},{value:"Quick summary",id:"quick-summary",level:2}];function d(e){let o={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.p,{children:["In the upcoming version of metals we will add support for\n",(0,s.jsx)(o.a,{href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_workspaceFolders",children:"LSP workspace folders"}),".\nThis feature allows you to load multiple Scala projects/modules into the same\nworkspace without the need to switch between multiple windows."]}),"\n",(0,s.jsx)(o.h2,{id:"the-new-multi-root-approach",children:"The new multi-root approach"}),"\n",(0,s.jsxs)(o.p,{children:["Before this feature metals would only support a single project treating a\nworkspace root folder as the root of the project. The workspace root was\nestablished based on the ",(0,s.jsx)(o.code,{children:"rootUri"})," field of\n",(0,s.jsx)(o.a,{href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#initializeParams",children:(0,s.jsx)(o.code,{children:"InitializeParams"})}),"\nsent by the client upon initialization."]}),"\n",(0,s.jsxs)(o.p,{children:["Now a single metals instance can accommodate several projects (or multiple roots\nof a project) at the time. In ",(0,s.jsx)(o.code,{children:"InitializeParams"})," metals first looks for\nprojects' roots under ",(0,s.jsx)(o.code,{children:"workspaceFolders"})," in ",(0,s.jsx)(o.code,{children:"InitializeParams"})," and if empty we\nstill fallback to the ",(0,s.jsx)(o.code,{children:"rootUri"}),". Loaded projects can be changed dynamically\nthough ",(0,s.jsx)(o.code,{children:"didChangeWorkspaceFolders"})," notifications, which allow the client\n(editor) to inform metals about any added or removed projects."]}),"\n",(0,s.jsx)(o.p,{children:"All workspace folders are handled in metals separately and are oblivious of each\nother. E.g. for the following multi project structure"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"project1\n|- build.sbt\n|- src\n  |- Main.scala\n\nproject2\n|- build.sbt\n|- src\n  |- Main.scala\n"})}),"\n",(0,s.jsxs)(o.p,{children:["we will keep two separate entities: one responsible for ",(0,s.jsx)(o.code,{children:"project1"}),", and another\none for ",(0,s.jsx)(o.code,{children:"project2"}),". Upon receiving most requests metals will redirect them to\nthe entity responsible for the project of interest. If there are no other clues\nthe project is chosen based on the currently opened file. E.g. if the user wants\nto insert an inferred type in the file ",(0,s.jsx)(o.code,{children:"../project1/src/Main"}),", the request\nreceived by Metals will be redirected to the entity responsible for ",(0,s.jsx)(o.code,{children:"project1"}),"."]}),"\n",(0,s.jsx)(o.p,{children:"For some requests we collect information from all the projects and send a joint\nresult, e.g. when searching for workspace symbols."}),"\n",(0,s.jsx)(o.h2,{id:"how-do-i-use-the-multi-root-feature",children:"How do I use the multi-root feature?"}),"\n",(0,s.jsx)(o.h3,{id:"vscode",children:"VSCode"}),"\n",(0,s.jsxs)(o.p,{children:["In VSCode workspace folder support is achieved by\n",(0,s.jsx)(o.a,{href:"https://code.visualstudio.com/docs/editor/multi-root-workspaces",children:"multi-root workspaces"}),".\nTo load multiple projects into a single workspace you can simply open one of the\nprojects and add the other one using ",(0,s.jsx)(o.code,{children:"File > Add Folder to Workspace"})," and then\nchoosing the correct folder."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/LTYrx9V.gif",alt:"add-workspace-folder"})}),"\n",(0,s.jsx)(o.p,{children:"Now you have two projects loaded side by side, so you can easily see both and\nswitch between them. All of the current metals functionality accommodates\nmultiple projects, so you can use metals the same way as you did before. The\nbiggest changes will be visible in the places where information from the whole\nworkspace is collected, like workspace symbol search, test explorer, or metals\ndoctor."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/zWmmsC2.gif",alt:"multi-root-tests"})}),"\n",(0,s.jsxs)(o.p,{children:["The target project for a command is usually chosen based on the currently opened\nfile. E.g. if you run ",(0,s.jsx)(o.code,{children:"Switch build server"})," the command it will be executed for\nthe project in focus. If no project is in focus the editor will explicitly ask\nfor which project the command should be executed."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/tV7K822.gif",alt:"target-folder"})}),"\n",(0,s.jsxs)(o.p,{children:["Finally, logs can still be found in the ",(0,s.jsx)(o.code,{children:".metals/metals.log"})," in the root of each\nproject. Note, that for the time being all information is logged to all opened\nworkspace folders, so anything logged for ",(0,s.jsx)(o.code,{children:"project1"})," will also be visible in\nlogs for ",(0,s.jsx)(o.code,{children:"project2"}),"."]}),"\n",(0,s.jsxs)(o.h3,{id:"nvim-metals-section-written-by-ckipp01",children:["nvim-metals (",(0,s.jsxs)(o.em,{children:["section written by ",(0,s.jsx)(o.a,{href:"https://github.com/ckipp01",children:"ckipp01"})]}),")"]}),"\n",(0,s.jsxs)(o.p,{children:["When using nvim-metals, you'll start just like you do with any other project.\nSince the idea of a workspace is a bit \"artificial\" with Neovim, you can really\njust add any new root to have a multi-root workspace. All you'll need to do is\nnavigate to a file at the root level of the workspace you'd like to add, and use\nthe\n",(0,s.jsx)(o.a,{href:"https://neovim.io/doc/user/lsp.html#vim.lsp.buf.add_workspace_folder()",children:(0,s.jsx)(o.code,{children:"vim.lsp.buf.add_workspace_folder()"})}),"\nfunction to add the folder containing the file you're in as another root."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/E8iriR9.gif",alt:"add_workspace_folder"})}),"\n",(0,s.jsx)(o.p,{children:"To make this easier, you can also just create a mapping to use."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-lua",children:'vim.keymap.set("n", "<leader>awf", vim.lsp.buf.add_workspace_folder)\n'})}),"\n",(0,s.jsx)(o.p,{children:"To verify that this has worked correctly you should be able to now see both\nworkspaces reflected in your Metals Doctor."}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/2u48wDK.gif",alt:"nvim-metals doctor"})}),"\n",(0,s.jsxs)(o.p,{children:["You should also see that some commands, like the\n",(0,s.jsx)(o.a,{href:"https://neovim.io/doc/user/lsp.html#vim.lsp.buf.workspace_symbol()",children:(0,s.jsx)(o.code,{children:"vim.lsp.buf.workspace_symbol()"})}),"\nnow show results from all the added workspaces."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.img,{src:"https://i.imgur.com/RczJIcp.gif",alt:"workspace_symbols"})}),"\n",(0,s.jsx)(o.h2,{id:"changes-for-the-clients",children:"Changes for the clients"}),"\n",(0,s.jsx)(o.p,{children:"Since workspace folders are a part of the LSP for any client implementing this\ncapability the multi-root support should work out of the box, however, there\nwill be a few minor changes to needed accommodate the new approach."}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["The metals doctor result json format will change to contain a list of\ndiagnostics for each workspace folder. Current format can be found in the\ndescription of ",(0,s.jsx)(o.code,{children:"RunDoctor"})," command (visible in ",(0,s.jsx)(o.code,{children:"ClientCommands.scala"})," in\n",(0,s.jsx)(o.code,{children:"metals"})," repo)."]}),"\n",(0,s.jsxs)(o.li,{children:["For test explorer users ",(0,s.jsx)(o.code,{children:"BuildTargetUpdate"})," will also now contain information\nabout the target folder."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"quick-summary",children:"Quick summary"}),"\n",(0,s.jsxs)(o.p,{children:["Metals now supports the\n",(0,s.jsx)(o.a,{href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_workspaceFolders",children:"LSP workspace folders"}),",\nwhich in VSCode are implemented by\n",(0,s.jsx)(o.a,{href:"https://code.visualstudio.com/docs/editor/multi-root-workspaces",children:"multi-root workspaces"}),"."]}),"\n",(0,s.jsx)(o.p,{children:"If you haven't yet make sure to try out our new multi-root support!"})]})}function h(e={}){let{wrapper:o}={...(0,n.a)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,o,t){t.d(o,{Z:function(){return l},a:function(){return i}});var r=t(67294);let s={},n=r.createContext(s);function i(e){let o=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:o},e.children)}},86465:function(e){e.exports=JSON.parse('{"permalink":"/metals/blog/2023/07/17/workspace-folders","source":"@site/blog/2023-07-17-workspace-folders.md","title":"Workspace folders","description":"In the upcoming version of metals we will add support for","date":"2023-07-17T00:00:00.000Z","tags":[],"readingTime":3.805,"hasTruncateMarker":false,"authors":[{"name":"Katarzyna Marek","url":"https://github.com/kasiaMarek","imageURL":"https://github.com/kasiaMarek.png","key":"kmarek","page":null}],"frontMatter":{"authors":"kmarek","title":"Workspace folders"},"unlisted":false,"prevItem":{"title":"Metals v1.0.0 - Silver","permalink":"/metals/blog/2023/07/19/silver"},"nextItem":{"title":"Metals v0.11.12 - Aluminium","permalink":"/metals/blog/2023/04/21/aluminium"}}')}}]);