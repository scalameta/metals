def foobar(): Unit = {
  ???
  ???
  ???
  ???
}

def test(): Unit = {
  try {
    ???
    ???
    ???
    ???
    ???
  }
  catch {
    case ??? => ???
    case ??? => ???
    case ??? => ???
    case ??? => ???
    case ??? => ???
  }

  ??? match {
    case ??? => ???
    case ??? => ???
  }

  ??? match {
    case ??? => ???
    case ??? => ???
  }

  val zyx = ??? match {
    case ??? => ???
    case ??? => ???
    case ??? => ???
    case ??? => ???
  }
}

def noFoldHere(): Unit = { ??? }

def noFoldInside(): Unit =
  ??? match
  { case ??? => ??? }

  for { ??? <- ??? }
  yield ???

class Bar {
  def foo() = {
    ???
    ???
    ???
  }

  def bar() = {
    ???
    ???
    ???
  }

  def fbar() =
  {
    ???
    ???
    ???
  }
}

trait Bar2 {
  def foo(): Unit

  def bar(): Unit
}
